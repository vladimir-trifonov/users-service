swagger: '2.0'
info:
  title: Users service
  description: API to manage a user persistence layer
  version: "1.0.0"
schemes:
  - http
basePath: /
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    get:
      summary: Users
      operationId: GetUsers
      description: |
        The get Users endpoint returns information about the users. 
        The response includes the email and other details about 
        each user, like forename and surname.
      tags:
        - Users
      responses:
        200:
          description: An array of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Users
      operationId: CreateUser
      description: |
        The create User endpoint creates new user. 
        The request includes the email, forename and the surname
        of the user.
      parameters:
        - name: body
          in: body
          description: A user's object that needs to be created.
          required: true
          schema:
            $ref: '#/definitions/User'
      tags:
        - Users
      responses:
        201:
          description: Created
          schema:
            type: object
            items:
              $ref: '#/definitions/UserId'
        209:
          description: Conflict. A user with the same email already exist.
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  /users/{id}:
    get:
      summary: User
      operationId: GetUserById
      description: |
        This endpoint returns information about a user. 
        The response includes the email and other details, 
        like forename and surname.
      parameters:
        - name: id
          in: path
          description: User's id.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - Users
      responses:
          200:
            description: Information for a user
              The User endpoint returns information about the user by user's id.
            schema:
              type: array
              items:
                $ref: '#/definitions/User'
          404:
            description: Not found
          500:
            description: Internal server error
            schema:
              $ref: '#/definitions/Error'
    put:
      summary: User
      operationId: UpdateUserById
      description: |
        This endpoint updates the user's information. 
        The request body should includes forename and/or surname.
      parameters:
        - name: id
          in: path
          description: User's id.
          required: true
          type: string
        - name: body
          in: body
          description: Updated information for the user's object.
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      tags:
        - Users
      responses:
          204:
            description: No content
          404:
            description: Not found
          500:
            description: Internal server error
            schema:
              $ref: '#/definitions/Error'
    delete:
      summary: User
      operationId: DeleteUserById
      description: |
        This endpoint deletes a user.
      parameters:
        - name: id
          in: path
          description: User's id.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - Users
      responses:
          204:
            description: No content
          404:
            description: Not found
          500:
            description: Internal server error
            schema:
              $ref: '#/definitions/Error'
definitions:
  User:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier representing a specific user.
      email:
        type: string
        description: A users email address.
      forename:
        type: string
        description: A users first name.
      surname:
        type: string
        description: A users last name.
      created:
        type: string
        description: The date and time the user was added.
  Error:
    type: object
    properties:
      statusCode:
        type: integer
        format: int32
      error:
        type: string
      message:
        type: string
  UserId:
    type: object
    properties:
      _id:
        type: string
        description: The unique identifier of the created user.