{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to manage a user persistence layer",
    "version" : "1.0.0",
    "title" : "Users service"
  },
  "basePath" : "/",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Users",
        "description" : "The get Users endpoint returns information about the users. \nThe response includes the email and other details about \neach user, like forename and surname.\n",
        "operationId" : "GetUsers",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "An array of users",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Users",
        "description" : "The create User endpoint creates new user. \nThe request includes the email, forename and the surname\nof the user.\n",
        "operationId" : "CreateUser",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "A user's object that needs to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "User",
        "description" : "This endpoint returns information about a user. \nThe response includes the email and other details, \nlike forename and surname.\n",
        "operationId" : "GetUserById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User's id.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Information for a user The User endpoint returns information about the user by user's id.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "User",
        "description" : "This endpoint updates the user's information. \nThe request body should includes forename and/or surname.\n",
        "operationId" : "UpdateUserById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User's id.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Updated information for the user's object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "User",
        "description" : "This endpoint deletes a user.\n",
        "operationId" : "DeleteUserById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User's id.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "User" : {
      "type" : "object",
      "properties" : {
        "_id" : {
          "type" : "string",
          "description" : "Unique identifier representing a specific user."
        },
        "email" : {
          "type" : "string",
          "description" : "A users email address."
        },
        "forename" : {
          "type" : "string",
          "description" : "A users first name."
        },
        "surname" : {
          "type" : "string",
          "description" : "A users last name."
        },
        "created" : {
          "type" : "string",
          "description" : "The date and time the user was added."
        }
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "error" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "UserId" : {
      "type" : "object",
      "properties" : {
        "_id" : {
          "type" : "string",
          "description" : "The unique identifier of the created user."
        }
      }
    }
  }
}